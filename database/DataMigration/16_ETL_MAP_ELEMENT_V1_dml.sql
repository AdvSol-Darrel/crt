/*** Scripts to retrieve data, inject into appropriate worksheet of excel workbook ./Mapping.xslx

-- retrieve values from Legacy table
SELECT * FROM tblElements
--WHERE Active = 1
ORDER BY Code ASC

--retrieve values from CRT Code Table
SELECT * FROM CRT_ELEMENT 
WHERE END_DATE IS NULL
ORDER BY CODE ASC

***/

BEGIN TRANSACTION

IF OBJECT_ID('dbo.MAP_ELEMENT', 'U') IS NOT NULL
	DROP TABLE dbo.MAP_ELEMENT;
COMMIT
GO

BEGIN TRANSACTION

CREATE TABLE dbo.MAP_ELEMENT
(
	LEGACY_ID numeric(9, 0) NOT NULL,
	CRT_ID numeric(9, 0) NOT NULL
)  ON [PRIMARY]

COMMIT
GO

BEGIN TRANSACTION
SET NOCOUNT ON

INSERT INTO MAP_ELEMENT VALUES (63, 63);  --At > At
INSERT INTO MAP_ELEMENT VALUES (1, 64);  --Bb > Bb
INSERT INTO MAP_ELEMENT VALUES (2, 65);  --Bc > Bc
INSERT INTO MAP_ELEMENT VALUES (3, 66);  --Bd > Bd
INSERT INTO MAP_ELEMENT VALUES (53, 67);  --Bi > Bi
INSERT INTO MAP_ELEMENT VALUES (4, 68);  --Bj > Bj
INSERT INTO MAP_ELEMENT VALUES (5, 69);  --Bl > Bl
INSERT INTO MAP_ELEMENT VALUES (6, 70);  --Bm > Bm
INSERT INTO MAP_ELEMENT VALUES (7, 71);  --Bn > Bn
INSERT INTO MAP_ELEMENT VALUES (8, 72);  --Br > Br
INSERT INTO MAP_ELEMENT VALUES (9, 73);  --Bs > Bs
INSERT INTO MAP_ELEMENT VALUES (64, 74);  --Ca > Ca
INSERT INTO MAP_ELEMENT VALUES (10, 75);  --CC > CC
INSERT INTO MAP_ELEMENT VALUES (11, 76);  --Ce > Ce
INSERT INTO MAP_ELEMENT VALUES (12, 77);  --Cn > Cn
INSERT INTO MAP_ELEMENT VALUES (13, 78);  --Cv > Cv
INSERT INTO MAP_ELEMENT VALUES (14, 79);  --Dd > Dd
INSERT INTO MAP_ELEMENT VALUES (15, 80);  --Dr > Dr
INSERT INTO MAP_ELEMENT VALUES (16, 81);  --Ex > Ex
INSERT INTO MAP_ELEMENT VALUES (17, 82);  --Fe > Fe
INSERT INTO MAP_ELEMENT VALUES (18, 83);  --Gr > Gr
INSERT INTO MAP_ELEMENT VALUES (59, 84);  --Hf > Hf
INSERT INTO MAP_ELEMENT VALUES (19, 85);  --Ho > Ho
INSERT INTO MAP_ELEMENT VALUES (20, 86);  --If > If
INSERT INTO MAP_ELEMENT VALUES (21, 87);  --Lr > Lr
INSERT INTO MAP_ELEMENT VALUES (57, 88);  --Mo > Mo
INSERT INTO MAP_ELEMENT VALUES (44, 89);  --Not Applicable > Not Applicable
INSERT INTO MAP_ELEMENT VALUES (54, 90);  --Ns > Ns
INSERT INTO MAP_ELEMENT VALUES (55, 91);  --Nu > Nu
INSERT INTO MAP_ELEMENT VALUES (22, 92);  --P3 > P3
INSERT INTO MAP_ELEMENT VALUES (62, 93);  --Pts > Pts
INSERT INTO MAP_ELEMENT VALUES (23, 94);  --Qb > Qb
INSERT INTO MAP_ELEMENT VALUES (24, 95);  --Rb > Rb
INSERT INTO MAP_ELEMENT VALUES (25, 96);  --Rn > Rn
INSERT INTO MAP_ELEMENT VALUES (65, 97);  --Rr > Rr
INSERT INTO MAP_ELEMENT VALUES (26, 98);  --Rs > Rs
INSERT INTO MAP_ELEMENT VALUES (27, 99);  --Sa > Sa
INSERT INTO MAP_ELEMENT VALUES (28, 100);  --Sc > Sc
INSERT INTO MAP_ELEMENT VALUES (29, 101);  --Sd > Sd
INSERT INTO MAP_ELEMENT VALUES (30, 102);  --Sf > Sf
INSERT INTO MAP_ELEMENT VALUES (31, 103);  --Sg > Sg
INSERT INTO MAP_ELEMENT VALUES (32, 104);  --Sh > Sh
INSERT INTO MAP_ELEMENT VALUES (33, 105);  --Si > Si
INSERT INTO MAP_ELEMENT VALUES (46, 119);  --Unknown > Sl
INSERT INTO MAP_ELEMENT VALUES (34, 106);  --Sm > Sm
INSERT INTO MAP_ELEMENT VALUES (35, 107);  --Sn > Sn
INSERT INTO MAP_ELEMENT VALUES (36, 108);  --So > So
INSERT INTO MAP_ELEMENT VALUES (37, 109);  --Sp > Sp
INSERT INTO MAP_ELEMENT VALUES (38, 110);  --Sr > Sr
INSERT INTO MAP_ELEMENT VALUES (39, 111);  --Ss > Ss
INSERT INTO MAP_ELEMENT VALUES (40, 112);  --St > St
INSERT INTO MAP_ELEMENT VALUES (41, 113);  --Su > Su
INSERT INTO MAP_ELEMENT VALUES (42, 114);  --Sw > Sw
INSERT INTO MAP_ELEMENT VALUES (56, 115);  --Sw-DFAA > Sw-DFAA
INSERT INTO MAP_ELEMENT VALUES (43, 116);  --Sx > Sx
INSERT INTO MAP_ELEMENT VALUES (60, 117);  --Tc > Tc
INSERT INTO MAP_ELEMENT VALUES (45, 118);  --Ts > Ts
INSERT INTO MAP_ELEMENT VALUES (52, 119);  --Unknown > Unknown

COMMIT
GO

DECLARE @legacyCnt int, @crtCnt int, @mappedCnt int;

-- retrieve values from Legacy table
SELECT @legacyCnt = COUNT(*) 
FROM tblElements
WHERE Active = 1

--retrieve values from CRT Code Table
SELECT @crtCnt = COUNT(*) 
FROM CRT_ELEMENT
WHERE END_DATE IS NULL

SELECT @mappedCnt = COUNT(*) 
FROM MAP_ELEMENT

PRINT CHAR(10) + 'Found ' + CONVERT(varchar, @legacyCnt) + ' Legacy Items and ' + CONVERT(varchar, @crtCnt) + ' CRT Element Items'
PRINT 'Mapped ' + CONVERT(varchar, @mappedCnt) + ' Total Items'

--SELECT * FROM MAP_ELEMENT

BEGIN
	DECLARE @missing int;

	SELECT @missing = COUNT(*) 
	FROM tblFinancialForecast
	WHERE Element IN (SELECT ID FROM 
		(SELECT * FROM MAP_ELEMENT me
		RIGHT JOIN tblElements te
		ON te.ID = me.LEGACY_ID) AS Element
		WHERE LEGACY_ID IS NULL)

	PRINT 'Found ' + CONVERT(varchar, @missing) + ' Projects linked to un-mapped Phases'
END

/*
-- There is an element missing.. ID: 46, Code: Sl, Desc: Unknown
-- Should find zero! 

SELECT *
FROM tblFinancialForecast
WHERE Element IN (SELECT ID FROM 
	(SELECT * FROM MAP_ELEMENT me
	RIGHT JOIN tblElements te
	ON te.ID = me.LEGACY_ID) AS Element
	WHERE LEGACY_ID IS NULL)
*/

