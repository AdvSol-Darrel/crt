/*** Scripts to retrieve data, inject into appropriate worksheet of excel workbook ./Mapping.xslx

-- retrieve values from Legacy table
SELECT ID, Code FROM tblElements
ORDER BY Code ASC

--retrieve values from CRT Code Table
SELECT ELEMENT_ID, CODE FROM CRT_ELEMENT 
WHERE END_DATE IS NULL
ORDER BY CODE ASC

***/

BEGIN TRANSACTION

IF OBJECT_ID('dbo.MAP_ELEMENT', 'U') IS NOT NULL
	DROP TABLE dbo.MAP_ELEMENT;
COMMIT
GO

BEGIN TRANSACTION

CREATE TABLE dbo.MAP_ELEMENT
(
	LEGACY_ID numeric(9, 0) NOT NULL,
	CRT_ID numeric(9, 0) NOT NULL
)  ON [PRIMARY]

COMMIT
GO

BEGIN TRANSACTION
SET NOCOUNT ON

/*** Generated Inserts Go Here ***/
INSERT INTO MAP_ELEMENT VALUES (63, 4);  --At > At
INSERT INTO MAP_ELEMENT VALUES (1, 52);  --Bb > Bb
INSERT INTO MAP_ELEMENT VALUES (2, 9);  --Bc > Bc
INSERT INTO MAP_ELEMENT VALUES (3, 10);  --Bd > Bd
INSERT INTO MAP_ELEMENT VALUES (53, 11);  --Bi > Bi
INSERT INTO MAP_ELEMENT VALUES (4, 12);  --Bj > Bj
INSERT INTO MAP_ELEMENT VALUES (5, 13);  --Bl > Bl
INSERT INTO MAP_ELEMENT VALUES (6, 14);  --Bm > Bm
INSERT INTO MAP_ELEMENT VALUES (7, 15);  --Bn > Bn
INSERT INTO MAP_ELEMENT VALUES (8, 16);  --Br > Br
INSERT INTO MAP_ELEMENT VALUES (9, 17);  --Bs > Bs
INSERT INTO MAP_ELEMENT VALUES (64, 5);  --Ca > Ca
INSERT INTO MAP_ELEMENT VALUES (10, 49);  --CC > CC
INSERT INTO MAP_ELEMENT VALUES (11, 7);  --Ce > Ce
INSERT INTO MAP_ELEMENT VALUES (12, 53);  --Cn > Cn
INSERT INTO MAP_ELEMENT VALUES (13, 54);  --Cv > Cv
INSERT INTO MAP_ELEMENT VALUES (14, 55);  --Dd > Dd
INSERT INTO MAP_ELEMENT VALUES (15, 24);  --Dr > Dr
INSERT INTO MAP_ELEMENT VALUES (51, 56);  --En > En
INSERT INTO MAP_ELEMENT VALUES (16, 50);  --Ex > Ex
INSERT INTO MAP_ELEMENT VALUES (17, 25);  --Fe > Fe
INSERT INTO MAP_ELEMENT VALUES (18, 26);  --Gr > Gr
INSERT INTO MAP_ELEMENT VALUES (59, 57);  --Hf > Hf
INSERT INTO MAP_ELEMENT VALUES (19, 8);  --Ho > Ho
INSERT INTO MAP_ELEMENT VALUES (20, 27);  --If > If
INSERT INTO MAP_ELEMENT VALUES (21, 51);  --Lr > Lr
INSERT INTO MAP_ELEMENT VALUES (49, 58);  --Mc > Mc
INSERT INTO MAP_ELEMENT VALUES (57, 46);  --Mo > Mo
INSERT INTO MAP_ELEMENT VALUES (47, 59);  --Mp > Mp
INSERT INTO MAP_ELEMENT VALUES (44, 47);  --Not Applicable > Not Applicable
INSERT INTO MAP_ELEMENT VALUES (54, 33);  --Ns > Ns
INSERT INTO MAP_ELEMENT VALUES (55, 34);  --Nu > Nu
INSERT INTO MAP_ELEMENT VALUES (50, 60);  --Ogi > Ogi
INSERT INTO MAP_ELEMENT VALUES (22, 23);  --P3 > P3
INSERT INTO MAP_ELEMENT VALUES (62, 35);  --Pts > Pts
INSERT INTO MAP_ELEMENT VALUES (23, 18);  --Qb > Qb
INSERT INTO MAP_ELEMENT VALUES (24, 20);  --Rb > Rb
INSERT INTO MAP_ELEMENT VALUES (25, 21);  --Rn > Rn
INSERT INTO MAP_ELEMENT VALUES (65, 6);  --Rr > Rr
INSERT INTO MAP_ELEMENT VALUES (26, 22);  --Rs > Rs
INSERT INTO MAP_ELEMENT VALUES (27, 28);  --Sa > Sa
INSERT INTO MAP_ELEMENT VALUES (48, 61);  --Sb > Sb
INSERT INTO MAP_ELEMENT VALUES (28, 36);  --Sc > Sc
INSERT INTO MAP_ELEMENT VALUES (29, 37);  --Sd > Sd
INSERT INTO MAP_ELEMENT VALUES (30, 29);  --Sf > Sf
INSERT INTO MAP_ELEMENT VALUES (31, 30);  --Sg > Sg
INSERT INTO MAP_ELEMENT VALUES (32, 38);  --Sh > Sh
INSERT INTO MAP_ELEMENT VALUES (33, 19);  --Si > Si
INSERT INTO MAP_ELEMENT VALUES (46, 62);  --Unknown > Sl
INSERT INTO MAP_ELEMENT VALUES (34, 39);  --Sm > Sm
INSERT INTO MAP_ELEMENT VALUES (35, 40);  --Sn > Sn
INSERT INTO MAP_ELEMENT VALUES (36, 41);  --So > So
INSERT INTO MAP_ELEMENT VALUES (37, 31);  --Sp > Sp
INSERT INTO MAP_ELEMENT VALUES (38, 42);  --Sr > Sr
INSERT INTO MAP_ELEMENT VALUES (39, 43);  --Ss > Ss
INSERT INTO MAP_ELEMENT VALUES (40, 44);  --St > St
INSERT INTO MAP_ELEMENT VALUES (41, 45);  --Su > Su
INSERT INTO MAP_ELEMENT VALUES (42, 48);  --Sw > Sw
INSERT INTO MAP_ELEMENT VALUES (56, 1);  --Sw-DFAA > Sw-DFAA
INSERT INTO MAP_ELEMENT VALUES (43, 32);  --Sx > Sx
INSERT INTO MAP_ELEMENT VALUES (60, 2);  --Tc > Tc
INSERT INTO MAP_ELEMENT VALUES (45, 3);  --Ts > Ts
INSERT INTO MAP_ELEMENT VALUES (52, 62);  --Unknown > Unknown

COMMIT
GO

DECLARE @legacyCnt int, @crtCnt int, @mappedCnt int;

-- retrieve values from Legacy table
SELECT @legacyCnt = COUNT(*) 
FROM tblElements
WHERE Active = 1

--retrieve values from CRT Code Table
SELECT @crtCnt = COUNT(*) 
FROM CRT_ELEMENT
WHERE END_DATE IS NULL

SELECT @mappedCnt = COUNT(*) 
FROM MAP_ELEMENT

PRINT CHAR(10) + 'Found ' + CONVERT(varchar, @legacyCnt) + ' Legacy Items and ' + CONVERT(varchar, @crtCnt) + ' CRT Element Items'
PRINT 'Mapped ' + CONVERT(varchar, @mappedCnt) + ' Total Items'

--SELECT * FROM MAP_ELEMENT

BEGIN
	DECLARE @missing int;

	SELECT @missing = COUNT(*) 
	FROM tblFinancialForecast
	WHERE Element IN (SELECT ID FROM 
		(SELECT * FROM MAP_ELEMENT me
		RIGHT JOIN tblElements te
		ON te.ID = me.LEGACY_ID) AS Element
		WHERE LEGACY_ID IS NULL)

	PRINT 'Found ' + CONVERT(varchar, @missing) + ' Projects linked to un-mapped Phases'
END

/*
-- There is an element missing.. ID: 46, Code: Sl, Desc: Unknown
-- Should find zero! 

SELECT *
FROM tblFinancialForecast
WHERE Element IN (SELECT ID FROM 
	(SELECT * FROM MAP_ELEMENT me
	RIGHT JOIN tblElements te
	ON te.ID = me.LEGACY_ID) AS Element
	WHERE LEGACY_ID IS NULL)
*/

